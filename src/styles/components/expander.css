.Expander {
  max-height: calc(480px + 80px);
  overflow: hidden;
  position: relative;
}

@media (--md-viewport) {
  .Expander {
    max-height: calc(380px + 80px);
  }
}

/**
 * Expand action button
 */

.Expander-action {
  bottom: 0;
  box-sizing: border-box;
  cursor: pointer;
  display: block;
  height: 70px;
  left: 0;
  padding-top: 28px;
  position: absolute;
  -webkit-tap-highlight-color: transparent;
  text-align: left;
  user-select: none;
  width: 100%;
  will-change: transform;
}

.Expander-action::before {
  background-color: #fff;
  border-top: 1px solid var(--color-gray);
  content: "";
  height: 100%;
  left: -5%;
  position: absolute;
  top: 35%;
  transform: rotate(5deg);
  transform-origin: top center;
  width: 110%;
  will-change: transform;
}

.Expander-action:hover::before,
.Expander-action:focus::before,
.Expander-action:active::before {
  transform: translateY(10%) rotate(5deg);
}

.Expander-actionText {
  position: relative;
}

@media (--sm-viewport) {
  .Expander-actionText {
    font-size: 18px;
  }
}

/* Expand animation */

.Expander.is-expanded:not(.is-notTransitioning) {
  transition: max-height 0.5s ease;
}

.Expander.is-expanded:not(.is-notTransitioning) .Expander-action {
  transition: transform 0.5s ease-in;
}

.Expander:not(.is-notTransitioning) .Expander-action::before {
  transition: transform 0.2s ease;
}

/**
 * Expanded state. Depentend on JS
 */

html.no-script .Expander,
.Expander.is-expanded {
  max-height: none;
}

html.no-script .Expander-action,
.Expander.is-expanded .Expander-action {
  transform: translateY(70px) rotate(0);
}

html.no-script .Expander-action::before,
.Expander.is-expanded .Expander-action::before {
  transform: rotate(0);
}

/**
 * Hide an element while collapsed
 */

.Expander .Expander-hide {
  display: none;
}

html.no-script .Expander-hide,
.Expander.is-expanded .Expander-hide {
  display: block;
}
